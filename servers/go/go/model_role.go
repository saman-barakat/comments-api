/*
 * GComments
 *
 * APIs for creating and managing comments 
 *
 * API version: 1.0.0
 * Contact: support@comments.app
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package comments

type Role struct {

	Name string `json:"name,omitempty"`

	Capabilities []string `json:"capabilities,omitempty"`
}

// AssertRoleRequired checks if the required fields are not zero-ed
func AssertRoleRequired(obj Role) error {
	return nil
}

// AssertRecurseRoleRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Role (e.g. [][]Role), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRoleRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRole, ok := obj.(Role)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRoleRequired(aRole)
	})
}
