/*
 * GComments
 *
 * APIs for creating and managing comments 
 *
 * API version: 1.0.0
 * Contact: support@comments.app
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package gcomments

import (
	"context"
	"net/http"
	"errors"
)

// CommentApiService is a service that implements the logic for the CommentApiServicer
// This service should implement the business logic for every endpoint for the CommentApi API.
// Include any external packages or services that will be required by this service.
type CommentApiService struct {
}

// NewCommentApiService creates a default api service
func NewCommentApiService() CommentApiServicer {
	return &CommentApiService{}
}

// AddComment - Add a new comment
func (s *CommentApiService) AddComment(ctx context.Context, comment Comment) (ImplResponse, error) {
	// TODO - update AddComment with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddComment method not implemented")
}

// DeleteComment - Deletes a comment
func (s *CommentApiService) DeleteComment(ctx context.Context, commentId string, apiKey string) (ImplResponse, error) {
	// TODO - update DeleteComment with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteComment method not implemented")
}

// GetCommentById - Find comment by ID
func (s *CommentApiService) GetCommentById(ctx context.Context, commentId string) (ImplResponse, error) {
	// TODO - update GetCommentById with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Comment{}) or use other options such as http.Ok ...
	//return Response(200, Comment{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCommentById method not implemented")
}

// UpdateComment - Update an existing comment
func (s *CommentApiService) UpdateComment(ctx context.Context, comment Comment) (ImplResponse, error) {
	// TODO - update UpdateComment with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateComment method not implemented")
}

// UpdateCommentWithForm - Updates a comment with form data
func (s *CommentApiService) UpdateCommentWithForm(ctx context.Context, commentId string, userId string, postId string, blogId string, parentId string, authorDisplayName string, createdTimestamp time.Time, modifiedTimestamp time.Time, content string, status string, downvoteCount int32, upvoteCount int32, media Media) (ImplResponse, error) {
	// TODO - update UpdateCommentWithForm with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCommentWithForm method not implemented")
}
