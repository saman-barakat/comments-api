/*
 * Open APi
 *
 * This is a sample server. 
 *
 * API version: 1.0.0
 * Contact: email@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type Comment struct {

	Id string `json:"id,omitempty"`

	UserId string `json:"userId,omitempty"`

	PostId string `json:"postId,omitempty"`

	BlogId string `json:"blogId,omitempty"`

	ParentId string `json:"parentId,omitempty"`

	AuthorDisplayName string `json:"authorDisplayName,omitempty"`

	CreatedTimestamp time.Time `json:"created_timestamp,omitempty"`

	ModifiedTimestamp time.Time `json:"modified_timestamp,omitempty"`

	Content string `json:"content,omitempty"`

	Status string `json:"status,omitempty"`

	DownvoteCount int32 `json:"downvoteCount,omitempty"`

	UpvoteCount int32 `json:"upvoteCount,omitempty"`

	Media Media `json:"media,omitempty"`
}

// AssertCommentRequired checks if the required fields are not zero-ed
func AssertCommentRequired(obj Comment) error {
	if err := AssertMediaRequired(obj.Media); err != nil {
		return err
	}
	return nil
}

// AssertRecurseCommentRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Comment (e.g. [][]Comment), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCommentRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aComment, ok := obj.(Comment)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCommentRequired(aComment)
	})
}
