=begin
#Open APi

#This is a sample server. 

The version of the OpenAPI document: 1.0.0
Contact: email@gmail.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::CommentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CommentApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::CommentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CommentApi' do
    it 'should create an instance of CommentApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::CommentApi)
    end
  end

  # unit tests for add_comment
  # Add a new comment
  # @param comment Comment object that needs to be added
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_comment
  # Deletes a comment
  # @param comment_id Comment id to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_key 
  # @return [nil]
  describe 'delete_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_comment_by_id
  # Find comment by ID
  # Returns a single comment
  # @param comment_id ID of comment to return
  # @param [Hash] opts the optional parameters
  # @return [Comment]
  describe 'get_comment_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_comment
  # Update an existing comment
  # @param comment Comment object that needs to be added
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_comment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_comment_with_form
  # Updates a comment with form data
  # @param comment_id ID of comment that needs to be updated
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_id 
  # @option opts [String] :post_id 
  # @option opts [String] :blog_id 
  # @option opts [String] :parent_id 
  # @option opts [String] :author_display_name 
  # @option opts [Time] :created_timestamp 
  # @option opts [Time] :modified_timestamp 
  # @option opts [String] :content 
  # @option opts [String] :status 
  # @option opts [Integer] :downvote_count 
  # @option opts [Integer] :upvote_count 
  # @option opts [Media] :media 
  # @return [nil]
  describe 'update_comment_with_form test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
