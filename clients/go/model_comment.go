/*
GComments

APIs for creating and managing comments 

API version: 1.0.0
Contact: support@comments.app
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comments

import (
	"encoding/json"
	"time"
)

// Comment struct for Comment
type Comment struct {
	Id *string `json:"id,omitempty"`
	UserId *string `json:"userId,omitempty"`
	PostId *string `json:"postId,omitempty"`
	BlogId *string `json:"blogId,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
	AuthorDisplayName *string `json:"authorDisplayName,omitempty"`
	CreatedTimestamp *time.Time `json:"created_timestamp,omitempty"`
	ModifiedTimestamp *time.Time `json:"modified_timestamp,omitempty"`
	Content *string `json:"content,omitempty"`
	Status *string `json:"status,omitempty"`
	DownvoteCount *int32 `json:"downvoteCount,omitempty"`
	UpvoteCount *int32 `json:"upvoteCount,omitempty"`
	Media *Media `json:"media,omitempty"`
}

// NewComment instantiates a new Comment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComment() *Comment {
	this := Comment{}
	return &this
}

// NewCommentWithDefaults instantiates a new Comment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentWithDefaults() *Comment {
	this := Comment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Comment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Comment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Comment) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Comment) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Comment) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Comment) SetUserId(v string) {
	o.UserId = &v
}

// GetPostId returns the PostId field value if set, zero value otherwise.
func (o *Comment) GetPostId() string {
	if o == nil || o.PostId == nil {
		var ret string
		return ret
	}
	return *o.PostId
}

// GetPostIdOk returns a tuple with the PostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetPostIdOk() (*string, bool) {
	if o == nil || o.PostId == nil {
		return nil, false
	}
	return o.PostId, true
}

// HasPostId returns a boolean if a field has been set.
func (o *Comment) HasPostId() bool {
	if o != nil && o.PostId != nil {
		return true
	}

	return false
}

// SetPostId gets a reference to the given string and assigns it to the PostId field.
func (o *Comment) SetPostId(v string) {
	o.PostId = &v
}

// GetBlogId returns the BlogId field value if set, zero value otherwise.
func (o *Comment) GetBlogId() string {
	if o == nil || o.BlogId == nil {
		var ret string
		return ret
	}
	return *o.BlogId
}

// GetBlogIdOk returns a tuple with the BlogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetBlogIdOk() (*string, bool) {
	if o == nil || o.BlogId == nil {
		return nil, false
	}
	return o.BlogId, true
}

// HasBlogId returns a boolean if a field has been set.
func (o *Comment) HasBlogId() bool {
	if o != nil && o.BlogId != nil {
		return true
	}

	return false
}

// SetBlogId gets a reference to the given string and assigns it to the BlogId field.
func (o *Comment) SetBlogId(v string) {
	o.BlogId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *Comment) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *Comment) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *Comment) SetParentId(v string) {
	o.ParentId = &v
}

// GetAuthorDisplayName returns the AuthorDisplayName field value if set, zero value otherwise.
func (o *Comment) GetAuthorDisplayName() string {
	if o == nil || o.AuthorDisplayName == nil {
		var ret string
		return ret
	}
	return *o.AuthorDisplayName
}

// GetAuthorDisplayNameOk returns a tuple with the AuthorDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetAuthorDisplayNameOk() (*string, bool) {
	if o == nil || o.AuthorDisplayName == nil {
		return nil, false
	}
	return o.AuthorDisplayName, true
}

// HasAuthorDisplayName returns a boolean if a field has been set.
func (o *Comment) HasAuthorDisplayName() bool {
	if o != nil && o.AuthorDisplayName != nil {
		return true
	}

	return false
}

// SetAuthorDisplayName gets a reference to the given string and assigns it to the AuthorDisplayName field.
func (o *Comment) SetAuthorDisplayName(v string) {
	o.AuthorDisplayName = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *Comment) GetCreatedTimestamp() time.Time {
	if o == nil || o.CreatedTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetCreatedTimestampOk() (*time.Time, bool) {
	if o == nil || o.CreatedTimestamp == nil {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *Comment) HasCreatedTimestamp() bool {
	if o != nil && o.CreatedTimestamp != nil {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given time.Time and assigns it to the CreatedTimestamp field.
func (o *Comment) SetCreatedTimestamp(v time.Time) {
	o.CreatedTimestamp = &v
}

// GetModifiedTimestamp returns the ModifiedTimestamp field value if set, zero value otherwise.
func (o *Comment) GetModifiedTimestamp() time.Time {
	if o == nil || o.ModifiedTimestamp == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedTimestamp
}

// GetModifiedTimestampOk returns a tuple with the ModifiedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetModifiedTimestampOk() (*time.Time, bool) {
	if o == nil || o.ModifiedTimestamp == nil {
		return nil, false
	}
	return o.ModifiedTimestamp, true
}

// HasModifiedTimestamp returns a boolean if a field has been set.
func (o *Comment) HasModifiedTimestamp() bool {
	if o != nil && o.ModifiedTimestamp != nil {
		return true
	}

	return false
}

// SetModifiedTimestamp gets a reference to the given time.Time and assigns it to the ModifiedTimestamp field.
func (o *Comment) SetModifiedTimestamp(v time.Time) {
	o.ModifiedTimestamp = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *Comment) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *Comment) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *Comment) SetContent(v string) {
	o.Content = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Comment) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Comment) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Comment) SetStatus(v string) {
	o.Status = &v
}

// GetDownvoteCount returns the DownvoteCount field value if set, zero value otherwise.
func (o *Comment) GetDownvoteCount() int32 {
	if o == nil || o.DownvoteCount == nil {
		var ret int32
		return ret
	}
	return *o.DownvoteCount
}

// GetDownvoteCountOk returns a tuple with the DownvoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetDownvoteCountOk() (*int32, bool) {
	if o == nil || o.DownvoteCount == nil {
		return nil, false
	}
	return o.DownvoteCount, true
}

// HasDownvoteCount returns a boolean if a field has been set.
func (o *Comment) HasDownvoteCount() bool {
	if o != nil && o.DownvoteCount != nil {
		return true
	}

	return false
}

// SetDownvoteCount gets a reference to the given int32 and assigns it to the DownvoteCount field.
func (o *Comment) SetDownvoteCount(v int32) {
	o.DownvoteCount = &v
}

// GetUpvoteCount returns the UpvoteCount field value if set, zero value otherwise.
func (o *Comment) GetUpvoteCount() int32 {
	if o == nil || o.UpvoteCount == nil {
		var ret int32
		return ret
	}
	return *o.UpvoteCount
}

// GetUpvoteCountOk returns a tuple with the UpvoteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetUpvoteCountOk() (*int32, bool) {
	if o == nil || o.UpvoteCount == nil {
		return nil, false
	}
	return o.UpvoteCount, true
}

// HasUpvoteCount returns a boolean if a field has been set.
func (o *Comment) HasUpvoteCount() bool {
	if o != nil && o.UpvoteCount != nil {
		return true
	}

	return false
}

// SetUpvoteCount gets a reference to the given int32 and assigns it to the UpvoteCount field.
func (o *Comment) SetUpvoteCount(v int32) {
	o.UpvoteCount = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *Comment) GetMedia() Media {
	if o == nil || o.Media == nil {
		var ret Media
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Comment) GetMediaOk() (*Media, bool) {
	if o == nil || o.Media == nil {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *Comment) HasMedia() bool {
	if o != nil && o.Media != nil {
		return true
	}

	return false
}

// SetMedia gets a reference to the given Media and assigns it to the Media field.
func (o *Comment) SetMedia(v Media) {
	o.Media = &v
}

func (o Comment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.PostId != nil {
		toSerialize["postId"] = o.PostId
	}
	if o.BlogId != nil {
		toSerialize["blogId"] = o.BlogId
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.AuthorDisplayName != nil {
		toSerialize["authorDisplayName"] = o.AuthorDisplayName
	}
	if o.CreatedTimestamp != nil {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if o.ModifiedTimestamp != nil {
		toSerialize["modified_timestamp"] = o.ModifiedTimestamp
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DownvoteCount != nil {
		toSerialize["downvoteCount"] = o.DownvoteCount
	}
	if o.UpvoteCount != nil {
		toSerialize["upvoteCount"] = o.UpvoteCount
	}
	if o.Media != nil {
		toSerialize["media"] = o.Media
	}
	return json.Marshal(toSerialize)
}

type NullableComment struct {
	value *Comment
	isSet bool
}

func (v NullableComment) Get() *Comment {
	return v.value
}

func (v *NullableComment) Set(val *Comment) {
	v.value = val
	v.isSet = true
}

func (v NullableComment) IsSet() bool {
	return v.isSet
}

func (v *NullableComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComment(val *Comment) *NullableComment {
	return &NullableComment{value: val, isSet: true}
}

func (v NullableComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


