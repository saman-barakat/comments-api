/*
GComments

APIs for creating and managing comments 

API version: 1.0.0
Contact: support@comments.app
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package comments

import (
	"encoding/json"
)

// Blog struct for Blog
type Blog struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
	AuthToken *string `json:"authToken,omitempty"`
	CommentStatus *string `json:"commentStatus,omitempty"`
}

// NewBlog instantiates a new Blog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlog() *Blog {
	this := Blog{}
	return &this
}

// NewBlogWithDefaults instantiates a new Blog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlogWithDefaults() *Blog {
	this := Blog{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Blog) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blog) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Blog) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Blog) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Blog) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blog) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Blog) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Blog) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Blog) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blog) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Blog) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Blog) SetUrl(v string) {
	o.Url = &v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *Blog) GetAuthToken() string {
	if o == nil || o.AuthToken == nil {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blog) GetAuthTokenOk() (*string, bool) {
	if o == nil || o.AuthToken == nil {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *Blog) HasAuthToken() bool {
	if o != nil && o.AuthToken != nil {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *Blog) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetCommentStatus returns the CommentStatus field value if set, zero value otherwise.
func (o *Blog) GetCommentStatus() string {
	if o == nil || o.CommentStatus == nil {
		var ret string
		return ret
	}
	return *o.CommentStatus
}

// GetCommentStatusOk returns a tuple with the CommentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Blog) GetCommentStatusOk() (*string, bool) {
	if o == nil || o.CommentStatus == nil {
		return nil, false
	}
	return o.CommentStatus, true
}

// HasCommentStatus returns a boolean if a field has been set.
func (o *Blog) HasCommentStatus() bool {
	if o != nil && o.CommentStatus != nil {
		return true
	}

	return false
}

// SetCommentStatus gets a reference to the given string and assigns it to the CommentStatus field.
func (o *Blog) SetCommentStatus(v string) {
	o.CommentStatus = &v
}

func (o Blog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.AuthToken != nil {
		toSerialize["authToken"] = o.AuthToken
	}
	if o.CommentStatus != nil {
		toSerialize["commentStatus"] = o.CommentStatus
	}
	return json.Marshal(toSerialize)
}

type NullableBlog struct {
	value *Blog
	isSet bool
}

func (v NullableBlog) Get() *Blog {
	return v.value
}

func (v *NullableBlog) Set(val *Blog) {
	v.value = val
	v.isSet = true
}

func (v NullableBlog) IsSet() bool {
	return v.isSet
}

func (v *NullableBlog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlog(val *Blog) *NullableBlog {
	return &NullableBlog{value: val, isSet: true}
}

func (v NullableBlog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


