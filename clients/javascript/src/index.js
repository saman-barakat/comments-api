/**
 * GComments
 * APIs for creating and managing comments 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@comments.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Blog from './model/Blog';
import Comment from './model/Comment';
import Media from './model/Media';
import Post from './model/Post';
import Role from './model/Role';
import User from './model/User';
import VerificationStatus from './model/VerificationStatus';
import BlogApi from './api/BlogApi';
import CommentApi from './api/CommentApi';
import PostApi from './api/PostApi';
import UserApi from './api/UserApi';


/**
* APIs_for_creating_and_managing_comments.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GComments = require('index'); // See note below*.
* var xxxSvc = new GComments.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GComments.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GComments.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GComments.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Blog model constructor.
     * @property {module:model/Blog}
     */
    Blog,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The Post model constructor.
     * @property {module:model/Post}
     */
    Post,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The VerificationStatus model constructor.
     * @property {module:model/VerificationStatus}
     */
    VerificationStatus,

    /**
    * The BlogApi service constructor.
    * @property {module:api/BlogApi}
    */
    BlogApi,

    /**
    * The CommentApi service constructor.
    * @property {module:api/CommentApi}
    */
    CommentApi,

    /**
    * The PostApi service constructor.
    * @property {module:api/PostApi}
    */
    PostApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
